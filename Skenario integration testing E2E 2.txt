Skenario integration testing E2EUntuk menjalankan integration testing secara penuh :1. Menggunakan real device, karena aka nada testing untuk take picture dengan camerax.2. menonaktifkan seluruh animasi saat testing dilakukan3. InternetBeforemenyiapkan username unik untuk testing1.register fitur>welcome view>click R.id.signupWelcomeButton>fill R.id.nameEditText dengan username yang sudah di generate>fill R.id.emailEditText dengan email dummy berdasarkan username yang degenerate>click R.id.passwordEdittext lalu isi dengan “123456789”>memastikan R.id.signupButton ditampilkan secara penuh setelah itu melakukan aksi register dan menunggu selesai2. Login fitur>register berhasil diarahkan ke login form>fill R.id.nameEditText dengan username yang sudah di generate>fill R.id.emailEditText dengan email dummy berdasarkan username yang degenerate>click R.id.passwordEdittext lalu isi dengan “123456789”>memastikan R.id.loginButton ditampilkan secara penuh setelah itu melakukan aksi login3. home page> menemukan kan berinteraksi rv_main(recyclerview)>memilih salah satu story yang ada di recyclerview >mengakses detail view mengecek apakah R.id.imageDetailView secara utuh ditampilkan setelah itu melakukan click untuk masuk ke expand view >melakukan 2x backpress>navigasi pada tabHome berpindah ke tab dengan index 1>memastikan R.id.map (support fragment map) sudah secara penuh ditampilkan>melakukan swipe left sebanyak 4x untuk memverifikasi interaksi terhadap map>navigasi melalu tabHome Kembali ke tab dengan index 04.add post>memastikan R.id.fabHome (FAB) sudah secara penuh ditampilkan>click R.id.fabHome untuk navigasi ke halaman add story>memastikan R.id.switchCamera sudah secara penuh ditampilkan dan melakukan action click untuk memverifikasi fungsi button berjalan dengan baik>memastikan R.id.captureCamera sudah secara penuh ditampilkan dan melakukan action click untuk memverifikasi fungsi mengambil  foto berjalan dengan baik>mengecek apakah layout preview_post sudah secara penuh muncul saat foto sudah berhasil diambil>memastikan R.id.descriptionText sudah diatampilkan setelah itu melakukan action click dan menginputkan text dengan format "integration testing - Espresso - $username">menutup soft keyboard. Melakukan 2x swipe down pada R.id.preview_post>memastikan R.id.sendButton sudah ditampilkan dengan sempurna lalu melakukan action click untuk upload story>setelah upload selesai tampilan akan Kembali ke home >memastikan rv_main sudah bisa berinteraksi5.logout>memastikan tombol ke halaman setting(R.id.action_setting) sudah ditampilkan dengan sempurna dan melakukan action click>memastikan tombol logout (R.id.logoutButton) sudah tampil secara sempurna melakukan action clickSkenario unit testing1. LocationRepositoryImplTesta. Skenario Ketika location tidak berhasil didapatkan sehingga tidak meng-emit apapunb. Skenario Ketika location berhasil didapatkan sehingga repository meng-emit last location2. StoryRepositoryImplTesta. Scenario paging data dengan empty list (size 0)b. Scenario paging data dengan 10 list story item didalamnyac. Scenario post photo error dan memastikan network result berstatus Error dan memiliki message bernilai “fail”d. Scenario post photo Success dan memastikan network result berstatus Success dan memiliki message bernilai “success”3. UserRepositoryImplTesta. Scenario Ketika error atau user belum login akan mengirim kan nilai nullb. Scenario Ketika sudah login repo akan mengirim kan LoginResultc. Scenario Ketika login gagal repo akan memastikan LoginResponse dengan message “fail”d. Scenario Ketika login berhasil repo akan memastikan network result merupakan Successe. Scenario Ketika register gagal repo akan memastikan PostResponse dengan message “fail”f. Scenario Ketika login berhasil repo akan memastikan network result merupakan Success4. StoryViewModelTesta. Scenario untuk memverifikasi get location dimana sebelum diaktifkan akan mengirimkan null untuk lokasi dan setelah diaktifkan akan mengirim kan mock Locationb. Scenario untuk memverifikasi observe terhadap pagedList  dimana akan memastikan snapshot tidak null serta data berisi 10 item serta pada story on map akan memastikan berisi 10 dummy story itemc. Scenario untuk selected story, pada kondisi awal akan dipastikan bernilai null dan saat select story akan memastikan bernilai dummy datad. Scenario memverifikasi form , dimana dikondisi awal image dipastikan null dan setelah selected image dipastikan berisi mockFIle, dan selanjutnya memastikan default PostPhotoRequest akan berubah menjadi dummy setelah di updatee. Scenario post photo error, memastikan default value berniali  Initial state setelah request post photo value dipastikan merupakan network result dengan message failf. Scenario post photo success, memastikan default value bernilai nInitial state setelah request post photo value dipastikan merupakan network result dengan message “success”g. Scenario reset form, memastikan sebelum reset state bernilai dummyFIlled dan setelah reset dipastikan bernilai default5. UserViewModelTesta. Scenario error atau user belum login, memastikan viewmodel mengirimkan nilai null Ketika diminta sessionb. Scenario success atau user sudah login, memastikan viemodel mengirimkan niali dummy login result Ketika diminta sessionc. Scenario login error, memastikan viewmodel mengirimkan response Error Ketika diminta loginResponse setelah memanggil loginBy yang gagal di selesaikand. Scenario login success, memastikan viewmodel mengirimkan response Success Ketika diminta loginResponse setelah memanggil loginBy yang sukses di selesaikane. Scenario register error, memastikan viewmodel mengirimkan response Error Ketika diminta registerResponse setelah memanggil registerBy yang gagal di selesaikanf. Scenario register success, memastikan viewmodel mengirimkan response Success Ketika diminta registerResponse setelah memanggil registerBy yang sukses di selesaikang. Scenario logout, memastikan method logout di repository terpanggil ketikan method logout di viewmodel di jalankan.